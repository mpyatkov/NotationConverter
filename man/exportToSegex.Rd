% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NotationConverter.R
\name{exportToSegex}
\alias{exportToSegex}
\title{Allows convert any proper data.frame to Segex upload file}
\usage{
exportToSegex(input_df, from = "mm9")
}
\arguments{
\item{input_df}{data.frame with 5 columns:
\itemize{
\item gene_name
\item intensity 1
\item intensity 2
\item log2fc
\item adj_pvalue
}}

\item{from}{character string "mm9" or "mm10" depends on which notation represents the 'gene name' column}
}
\value{
list with two data.frames
\itemize{
\item to_segex is a data.frame with 75598 rows which ready to upload to Segex database. NOTE: intensity_1 and intensity_2 swaped because Segex database uses Condtion2/Condtion1 notation
\item appendix is a data.frame which is empty if "from" option equal to "mm9", for "mm10" it represents the genes (403 genes) which are not represented in Segex database
}
}
\description{
Allows convert any proper data.frame to Segex upload file
}
\examples{
library(dplyr)
library(readr)

test.df <- tibble(gname = "lnc50075",
                  i1 = 0.1,
                  i2 = 2.0,
                  log2fc = -4.321928,
                  adj_pvalue = 0.05)

res <- exportToSegex(test.df, from = "mm10")

# Segex can parse filenames, so to facilitate uploading just give the proper name for output file
# fn <- "1_scLoupe_SAMPLEID_Control_vs_SAMPLEID_Treatment_DiffExp_IntronicMonoExonic.tsv"
# write_tsv(res, fn, col_names = T)

}
